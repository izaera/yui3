YUI.add("event-simulate",function(F,e){var t,n,q,R,V,H,J,Q,W,Z,$,_,ee,te;t=F.Lang,n=F.config.win,q=t.isFunction,R=t.isString,V=t.isBoolean,H=t.isObject,J=t.isNumber,Q={click:1,dblclick:1,mouseover:1,mouseout:1,mousedown:1,mouseup:1,mousemove:1,contextmenu:1},W=n&&n.PointerEvent?{pointerover:1,pointerout:1,pointerdown:1,pointerup:1,pointermove:1}:{MSPointerOver:1,MSPointerOut:1,MSPointerDown:1,MSPointerUp:1,MSPointerMove:1},Z={keydown:1,keyup:1,keypress:1},$={submit:1,blur:1,change:1,focus:1,resize:1,scroll:1,select:1},_={scroll:1,resize:1,reset:1,submit:1,change:1,select:1,error:1,abort:1},ee={touchstart:1,touchmove:1,touchend:1,touchcancel:1},te={gesturestart:1,gesturechange:1,gestureend:1},F.mix(_,Q),F.mix(_,Z),F.mix(_,ee),F.Event.simulate=function(S,e,t){if(t=t||{},Q[e]||W[e]){var n=S,o=e,r=t.bubbles,i=t.cancelable,a=t.view,s=t.detail,c=t.screenX,u=t.screenY,l=t.clientX,v=t.clientY,m=t.ctrlKey,g=t.altKey,E=t.shiftKey,b=t.metaKey,d=t.button,h=t.relatedTarget,y=(n||F.error("simulateMouseEvent(): Invalid target."),R(o)?Q[o.toLowerCase()]||W[o]||F.error("simulateMouseEvent(): Event type '"+o+"' not supported."):F.error("simulateMouseEvent(): Event type must be a string."),V(r)||(r=!0),V(i)||(i="mousemove"!==o),H(a)||(a=F.config.win),J(s)||(s=1),J(c)||(c=0),J(u)||(u=0),J(l)||(l=0),J(v)||(v=0),V(m)||(m=!1),V(g)||(g=!1),V(E)||(E=!1),V(b)||(b=!1),J(d)||(d=0),h=h||null,null);if(q(F.config.doc.createEvent))(y=F.config.doc.createEvent("MouseEvents")).initMouseEvent?y.initMouseEvent(o,r,i,a,s,c,u,l,v,m,g,E,b,d,h):((y=F.config.doc.createEvent("UIEvents")).initEvent(o,r,i),y.view=a,y.detail=s,y.screenX=c,y.screenY=u,y.clientX=l,y.clientY=v,y.ctrlKey=m,y.altKey=g,y.metaKey=b,y.shiftKey=E,y.button=d,y.relatedTarget=h),h&&!y.relatedTarget&&("mouseout"===o?y.toElement=h:"mouseover"===o&&(y.fromElement=h)),n.dispatchEvent(y);else if(H(F.config.doc.createEventObject)){switch((y=F.config.doc.createEventObject()).bubbles=r,y.cancelable=i,y.view=a,y.detail=s,y.screenX=c,y.screenY=u,y.clientX=l,y.clientY=v,y.ctrlKey=m,y.altKey=g,y.metaKey=b,y.shiftKey=E,d){case 0:y.button=1;break;case 1:y.button=4;break;case 2:break;default:y.button=0}y.relatedTarget=h,n.fireEvent("on"+o,y)}else F.error("simulateMouseEvent(): No event simulation framework present.")}else if(Z[e]){var r=S,f=e,i=t.bubbles,a=t.cancelable,s=t.view,c=t.ctrlKey,u=t.altKey,l=t.shiftKey,v=t.metaKey,m=t.keyCode,g=t.charCode;if(r||F.error("simulateKeyEvent(): Invalid target."),R(f))switch(f=f.toLowerCase()){case"textevent":f="keypress";break;case"keyup":case"keydown":case"keypress":break;default:F.error("simulateKeyEvent(): Event type '"+f+"' not supported.")}else F.error("simulateKeyEvent(): Event type must be a string.");V(i)||(i=!0),V(a)||(a=!0),H(s)||(s=F.config.win),V(c)||(c=!1),V(u)||(u=!1),V(l)||(l=!1),V(v)||(v=!1),J(m)||(m=0),J(g)||(g=0);b=null;if(q(F.config.doc.createEvent)){try{(b=F.config.doc.createEvent("KeyEvents")).initKeyEvent(f,i,a,s,c,u,l,v,m,g)}catch(z){try{b=F.config.doc.createEvent("Events")}catch(D){b=F.config.doc.createEvent("UIEvents")}finally{b.initEvent(f,i,a),b.view=s,b.altKey=u,b.ctrlKey=c,b.shiftKey=l,b.metaKey=v,b.keyCode=m,b.charCode=g}}r.dispatchEvent(b)}else H(F.config.doc.createEventObject)?((b=F.config.doc.createEventObject()).bubbles=i,b.cancelable=a,b.view=s,b.ctrlKey=c,b.altKey=u,b.shiftKey=l,b.metaKey=v,b.keyCode=0<g?g:m,r.fireEvent("on"+f,b)):F.error("simulateKeyEvent(): No event simulation framework present.")}else $[e]?(E=S,d=e,h=t.bubbles,o=t.cancelable,n=t.view,Y=t.detail,E||F.error("simulateUIEvent(): Invalid target."),R(d)?(d=d.toLowerCase(),$[d]||F.error("simulateUIEvent(): Event type '"+d+"' not supported.")):F.error("simulateUIEvent(): Event type must be a string."),C=null,V(h)||(h=d in _),V(o)||(o="submit"===d),H(n)||(n=F.config.win),J(Y)||(Y=1),q(F.config.doc.createEvent)?((C=F.config.doc.createEvent("UIEvents")).initUIEvent(d,h,o,n,Y),E.dispatchEvent(C)):H(F.config.doc.createEventObject)?((C=F.config.doc.createEventObject()).bubbles=h,C.cancelable=o,C.view=n,C.detail=Y,E.fireEvent("on"+d,C)):F.error("simulateUIEvent(): No event simulation framework present.")):ee[e]?F.config.win&&"ontouchstart"in F.config.win&&!(F.UA.phantomjs||F.UA.chrome&&F.UA.chrome<6)?(Y=S,C=e,p=t.bubbles,K=t.cancelable,L=t.view,w=t.detail,N=t.screenX,U=t.screenY,k=t.clientX,T=t.clientY,M=t.ctrlKey,I=t.altKey,A=t.shiftKey,O=t.metaKey,B=t.touches,X=t.targetTouches,j=t.changedTouches,P=t.scale,x=t.rotation,Y||F.error("simulateTouchEvent(): Invalid target."),F.Lang.isString(C)?(C=C.toLowerCase(),ee[C]||F.error("simulateTouchEvent(): Event type '"+C+"' not supported.")):F.error("simulateTouchEvent(): Event type must be a string."),"touchstart"===C||"touchmove"===C?0===B.length&&F.error("simulateTouchEvent(): No touch object in touches"):"touchend"===C&&0===j.length&&F.error("simulateTouchEvent(): No touch object in changedTouches"),F.Lang.isBoolean(p)||(p=!0),F.Lang.isBoolean(K)||(K="touchcancel"!==C),F.Lang.isObject(L)||(L=F.config.win),F.Lang.isNumber(w)||(w=1),F.Lang.isNumber(N)||(N=0),F.Lang.isNumber(U)||(U=0),F.Lang.isNumber(k)||(k=0),F.Lang.isNumber(T)||(T=0),F.Lang.isBoolean(M)||(M=!1),F.Lang.isBoolean(I)||(I=!1),F.Lang.isBoolean(A)||(A=!1),F.Lang.isBoolean(O)||(O=!1),F.Lang.isNumber(P)||(P=1),F.Lang.isNumber(x)||(x=0),F.Lang.isFunction(F.config.doc.createEvent)?(F.UA.android?F.UA.android<4?((G=F.config.doc.createEvent("MouseEvents")).initMouseEvent(C,p,K,L,w,N,U,k,T,M,I,A,O,0,Y),G.touches=B,G.targetTouches=X,G.changedTouches=j):(G=F.config.doc.createEvent("TouchEvent")).initTouchEvent(B,X,j,C,L,N,U,k,T,M,I,A,O):F.UA.ios?2<=F.UA.ios?(G=F.config.doc.createEvent("TouchEvent")).initTouchEvent(C,p,K,L,w,N,U,k,T,M,I,A,O,B,X,j,P,x):F.error("simulateTouchEvent(): No touch event simulation framework present for iOS, "+F.UA.ios+"."):F.error("simulateTouchEvent(): Not supported agent yet, "+F.UA.userAgent),Y.dispatchEvent(G)):F.error("simulateTouchEvent(): No event simulation framework present.")):F.error(
"simulate(): Event '"+e+"' can't be simulated. Use gesture-simulate module instead."):F.UA.ios&&2<=F.UA.ios&&te[e]?(p=S,K=e,L=t.bubbles,w=t.cancelable,N=t.view,U=t.detail,k=t.screenX,T=t.screenY,M=t.clientX,I=t.clientY,A=t.ctrlKey,O=t.altKey,B=t.shiftKey,X=t.metaKey,j=t.scale,P=t.rotation,(!F.UA.ios||F.UA.ios<2)&&F.error("simulateGestureEvent(): Native gesture DOM eventframe is not available in this platform."),p||F.error("simulateGestureEvent(): Invalid target."),F.Lang.isString(K)?(K=K.toLowerCase(),te[K]||F.error("simulateTouchEvent(): Event type '"+K+"' not supported.")):F.error("simulateGestureEvent(): Event type must be a string."),F.Lang.isBoolean(L)||(L=!0),F.Lang.isBoolean(w)||(w=!0),F.Lang.isObject(N)||(N=F.config.win),F.Lang.isNumber(U)||(U=2),F.Lang.isNumber(k)||(k=0),F.Lang.isNumber(T)||(T=0),F.Lang.isNumber(M)||(M=0),F.Lang.isNumber(I)||(I=0),F.Lang.isBoolean(A)||(A=!1),F.Lang.isBoolean(O)||(O=!1),F.Lang.isBoolean(B)||(B=!1),F.Lang.isBoolean(X)||(X=!1),F.Lang.isNumber(j)||(j=1),F.Lang.isNumber(P)||(P=0),(x=F.config.doc.createEvent("GestureEvent")).initGestureEvent(K,L,w,N,U,k,T,M,I,A,O,B,X,p,j,P),p.dispatchEvent(x)):F.error("simulate(): Event '"+e+"' can't be simulated.");var p,K,L,w,N,U,k,T,M,I,A,O,B,X,j,P,x,G,Y,C}},"@VERSION@",{requires:["event-base"]});